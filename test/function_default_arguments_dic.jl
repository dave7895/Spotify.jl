# OBSOLETE, this is made automatically in src/utils/utilities.jl
Dict{Symbol, Tuple}(
    :album_get =>                       (:album_id, :market),
    :album_get_tracks =>                (:album_id, :limit, :offset, :market) ,
    :artist_get =>                      (:artist_id),
    :artist_get_albums =>               (:artist_id, :include_groups, :country, :limit, :offset),
    :artist_top_tracks =>               (:artist_id, :country),
    :artist_get_related_artists =>      (:artist_id),
    :category_get =>                    (:category_id, :country, :locale),
    :category_get_playlist =>           (:category_id, :country, :limit , :offset ),
    :category_get_several =>            (:country, :locale, :limit, :offset),
    :category_get_new_releases =>       (:country, :locale, :limit, :offset),
    :category_get_featured_playlist =>  (:country, :locale, :limit, :offset, :timestamp),
    :recommendations_get =>             (:seeds, :track_attributes, :limit , :market ),
    :recommendations_dict_parser =>     (:track_attributes),
    :episodes_get =>                    (:episode_id, :market),
    :follow_check =>                    (:type, :ids),
    :follow_check_playlist =>           (:playlist_id, :ids),
    :follow_artists =>                  (:type, :limit),
    :follow_artists_users =>            (:type, :ids),
    :follow_playlist =>                 (:playlist_id),
    :unfollow_artists_users =>          (:type, :ids),
    :unfollow_playlist =>               (:playlist_id),
    :library_get_saved_tracks =>        (:limit, :offset, :market),
    :library_get_saved_shows =>         (:limit, :offset),
    :library_get_saved_albums =>        (:limit, :offset, :market),
    :library_check_saved_tracks =>      (:track_ids),
    :library_check_saved_shows =>       (:show_ids),
    :library_check_saved_albums =>      (:album_ids),
    :library_remove_albums =>           (:album_ids),
    :library_remove_shows =>            (:show_ids),
    :library_remove_tracks =>           (:track_ids),
    :library_save_album =>              (:album_ids),
    :library_save_show =>               (:shows_ids),
    :library_save_track =>              (:track_ids),
    :top_tracks =>                      (:offset, :limit, :time_range),
    :top_artists =>                     (:offset, :limit, :time_range),
    :show_get =>                        (:show_id, :market),
    :show_get_episodes =>               (:show_id, :market, :limit, :offset),
    :tracks_get_audio_analysis =>       (:track_id),
    :tracks_get_audio_features =>       (:track_id),
    :tracks_get =>                      (:track_id, :market))
